// WestwoodRSA.h

#ifndef _WESTWOOD_RSA_H_INCLUDED_
#define _WESTWOOD_RSA_H_INCLUDED_

#define WWRSA_BLOCK_SIZE  64 // bytes

//#define WWRSA_p "102612110059335301817342935161797977525814635412660027321664726280719601506757"
//#define WWRSA_q "112287257900773203232107251504121204740102725877659141436602387813727738893603"
//#define WWRSA_N "11522032465975107352889547923537567075750358515303624181357267011840410598964877557018078806945183349048275309792564485107138916796581573943643390908575471"
//#define WWRSA_d "292623046754923361343226613931112814622231327372790455399549638395946935846721591305399839960384352986961508332959963625291392955627258586147274757286987"
//#define WWRSA_e "35"

#define WWRSA_p "90336306034988608177990369937674942312598126945629080039358980696516831956279"
#define WWRSA_q "114965715011442463284112195027084055446504070890856867618584335022146211064213"
#define WWRSA_N "10385578014804950221065190195736491193847541479389728420426514083771326945639729736695791225573893793119489336012297845146104637691941242485732839277543427"
#define WWRSA_d "10088847214381951643320470475858305731166183151407164751271470824235003318621252307969752086088076499395823874814123350292603347408732347765156628342107995"
#define WWRSA_e "35"

class WestwoodRSA
{
public:
    WestwoodRSA();
    virtual ~WestwoodRSA();

public:
    bool Encrypt(unsigned char *in_buffer, unsigned int length, unsigned char *out_buffer);
    bool Decrypt(unsigned char *in_buffer, unsigned int length, unsigned char *out_buffer);
    unsigned int GetModulus(unsigned char **p_out_buffer);
    unsigned int GetPublicExponent(unsigned char **p_out_buffer);

private:
};

#endif // _WESTWOOD_RSA_H_INCLUDED_

