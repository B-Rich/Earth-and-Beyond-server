<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ColorBox.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>36</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEAIACoJQAAFgAAACgAAAAwAAAAYAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//
        /wEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAwEBAQAFBQMCBQQIlWEzDT4iDwsABAQGAAQEBAIGBgQJDAsEAAQEBAAEBAQAAgIEAAICBAAC
        AgQAAwMCAQEBAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///wEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAEOCAUKJCsjJxI9N0kPPjlnNE9AgCVGPXgMPTpgEj86VRBAO1EQPjlRET86UxI/
        O1MKPTpSDT87UQ9APE8OOzg/AyAfIwEHBw0CBgYFAgICAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///wMAAAAAAAAAAAAA
        AAAAAAAAAAAAAB4LAQE9HQwGAQQEDAANDR0EKipXEk1KqDYzI9QvKRblLigX7jEqHOspJBLjMSoY3zky
        Hd4vKhfeLSgX3jErGd4rJRTdLikX3TUuGts2LxvNE1FMpg1DQXcJPj5SDCoqLwMUFBUCCAgIAgICAgMB
        AQEGAgEBCQICAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//
        /wMAAAAAAAAAAAAAAAAAAAAAAgAAAxUXEh1NWk1WC0JGeAlGRZcOVFHKIywm8kI5Jv01MCH/NC8a/zUw
        HP80Lh//PDQf/0I5I/83MR//OTEe/zgwHf88NB7+NzAd/kA2If45MyD9FlZT9RFUU+gOYF7XFFVRuA5T
        Uo4LQkJhBSYmOQQdHSUMHh0jCigpJAsQEBILAwIDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAP///wMAAAAAAAEBAQAGBgYABgYQABQULw1HUoEZO1PRE0tO6RBAQPASICD5NS8i/kQ8
        J/9PUTj/VVc9/1laPf9GRS3/Qzkm/0Y9KP89PSv/OzYh/z02Iv87NiH/NTEe/0g+J/88OCX/FxoZ/xQc
        HP8SKSv+ED5A+hIgIfEUNjXfEzg1xBQwLq8UP0atFzZPpw9FTm8JDw8pCgQDCQwDAwIAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///wMAAAACARsbEhpRV08TSk+BCFhbqxo3T90nLy/5MDEp/xoa
        Gv8UFhf/Kikd/y8uHv8tKx3/MjEg/ygnGv8vLR//NTMj/zQ0JP8xMiT/OTgn/y8uH/8uLiH/OTgn/z49
        K/83Nyj/FRYW/xMVFf8TFBT/FxcV/xIUE/8WGRv+ICAf+xYXF/kWGRn5GDNN9RlAVNQSSkmWETIyWxAh
        ITEOEA8VDwkIBkhAPwHa2NgBAAAAAAAAAAAAAAAAAAAAAP///wMAAAAIBjw9SyxKV78fMTnrJDU39B0w
        P/weICD/GBod/xMWFv8XFxX/OS8Y/zsyGP82LRf/OTAY/zYuF/81LBf/OS8Y/zsyGf8wKBX/MSkU/zAo
        E/8sJRH/MSkV/zoxGv80LBf/FRcX/xQVFf8SFBf/EhUY/xIUFf8YGhr/Jykk/y8xKP8wMSn/HzE//xg9
        UvkUZGPqHVdR0hlSTrMUSkmHFTw8VBslJCKEgYEK2tnZAgAAAAAAAAAAAAAAAP7+/gMABQUeE09UiypC
        TuodKC//HSgw/yEpK/8pKyX/KCkj/yEhGf8tLB//NjUk/1dLKP9XSiH/W00k/11RKP9hVCv/Wk4l/1pN
        Jv9USCH/VUci/1xPJf9VRyD/VUch/1FDIP9ANxz/HRwV/xkYE/8VFRT/FhYV/xMUE/8YHB3/ICIi/xsd
        IP8bHR7/IDZD/yE6S/8uMyr/KTs2/R1WVfgbZWPsIF5a0h9STaEmRDxcdYeDHM7R0QIAAAAAAAAAAP7+
        /gMFMTJLGkBFxSIyPPkeJir/IzA2/xwfIf8qLS3/HiAj/yYoJv8yMib/Qj0m/zAxKP9EQin/U08w/1lT
        M/9WUTD/Uk0r/1ZRLv9cVDH/V1At/1pRLf9TSyf/XFMu/1lPKv9PSSv/OjYi/zcyIf8qLCP/JCQd/yAe
        Ff8eHx3/Ki0l/y8wKf8uLyf/JEJW/yNCVv8bHB7/ISMh/yQlIf8UHR3/GDQ1/SBGQPYvLxrYMDMicoab
        mRTp6OgBAAAAAP7+/gQFREVfHzU+2iAvN/0kLC//ME1e/y1QbP82Rkz/Oz88/zc4Nf8nKir/HiIm/yws
        JP8+PCj/LjUm/zA2Iv8vNSL/MTYg/zE4If83OyX/NTsl/zU4I/81OCH/Oz0n/z0/Kv8xNST/KCwk/zAy
        KP84NSP/PTgh/ykoIf8jJSr/IyYq/yAjI/8aHB7/KEVT/y5GTv8vLyf/Ki0n/xweHv8RExb/ExQW/ykn
        Gf80MBf9LygUzjtPRFWrs7MM8O/vAf7+/gYDLC09MltpuTZZaPc2TVL/OTgu/zg/Qf9BVV3/SGp2/yxM
        Z/8vQU7/NTo3/zEyLf8iJif/KSkj/zU2KP9STS3/U00s/09MLP9EQyT/S0ks/0VEKf9FRiv/PD4k/0BB
        Kf87PSf/Ozsp/z84IP81MyL/ISMj/ywuNf9FSUX/T1FC/zc6N/8qOUT/LFBi/yc8RP8ZHB//HiEh/yAg
        Hf8WFRX/ExYW/yAfF/88NBf/LywZ+C4pF7g5XFc4y8zMBP7+/gYACQkSHWFoZFCFoclJc4jyVk8p/VFT
        Nv82OCb/NjUm/z5BN/84Tlv/MVp7/zpgdf8+VFn/Mjo3/yoqJv8sLCH/Ukoo/1dPKf9bTyn/V0sj/1tQ
        JP9WTCL/Wkwj/1hKIf9dTiT/Pzol/yssJv8gJCj/QkU+/0hLPP8xPkP/KkJU/y9PWv84Ynv/OVdu/0xT
        Sf9GSkD/LzEy/ywtJP8qJxv/GRoV/zYwHv9LQR//NDEd/y4qGe4qMSFyWn98Cv7+/gEAAAACABMTEhlR
        WlMvXUyoVEoh4V5ZM/hESDX+JzEz/y81LP9DRDD/T0Qi/05QN/9VbWf/U36N/0Vxgv8+WGD/KzU3/0xD
        Jv9ZTSb/WEwm/1tQKv9cUSn/WU8o/1ZNJ/9eVSv/T0cm/zY0Jf9EST3/N09S/yxKXf8lSWT/J1F0/0Rj
        dv9MVUr/TE47/zw9Nv9DPyr/Pjkl/zQyI/87PC3/PT0r/0E4Hf9VSCH/PTQZ/ywrG/cuKhiFL1pNDQAA
        AAAAAAAAAAAAAQEBAAkSHhkzI0o6eThMNrdITTXiMTkv+Co3Nf8rOTj/KTg6/yk0Nv8xNzL/Pj0t/0ZO
        QP9NYl//THSB/0FodP9FV1D/Tkwy/0pIL/9STjH/U08t/1VNLP9TSSb/SkYo/0FEMP9ISzf/Q1tZ/1B7
        h/9NcHf/UFpN/01GKP9MRib/WEwl/1VNK/86OR//Njkg/zY5I/9ISS//WFc1/1xPJP9PQxv/Wkoi/zMt
        GfcsKxuDJVdMDAAAAAAAAAAAAAAAAAAAAABXJRADBwkHEgInKDYHREZ7Hy8uxiYoIvArKyH8LzAq/jc1
        J/82Nir/OUA1/zc7Mf9NQx//V1Mw/0lOPv8xS1f/Kz9I/yo9Rf8pPUX/KT1G/ys+Rv8vQUb/Mk1V/zFN
        Vv8sOjr/Ljg0/zM9Nv9QTC3/XVIp/1hUL/9WSSL/W00j/1hPJ/9TTy7/NDUe/zE2IP8xOCL/SEkw/1pW
        Nf9aTyb/UUYg/1hMJPcvKxiBJ1pRCwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMACgoVCjY2TydM
        TJw1Q0rNNkVK3y0/TekySFTwPFVc9j5bYfw9V13/RGBj/z9VWP8rPEL/KDg+/yg4Pv8nNz3/KTg+/y4/
        Rf8xQkj/LTxD/yk5Qf8rPUX/MkFA/1FNMP9aVS7/WU4l/15QJ/9ZUy//V08o/1tLIv9dUCf/V1Iw/zk6
        IP8xNiD/MTYj/0hLM/9aVzT/Wk8k/1RJIfNORSJ3KVJFCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAABAAICCAMjJSENR1RFGFBRXxpMU3QXTVWMJ1JQqT1JP8tCTj/lS1M+9VJUPP1QSzD/PEEy/ys7
        Pf8nNz7/KDg+/yg4Pv8sO0P/Lj9F/y4/Rv8pOD7/KTU6/z9UV/9JYmD/Rl9c/zhGRf88Rj3/Nz40/zU1
        KP8wLyb/Li8n/ywwKP8lJyD/LS4h/yUoJP89PCn/MDYr+SVdVNIdTkhRIDs2BQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAgIDAAICBwADAwsABwcTAhsbJBE9NkQhTD50LFVErzlE
        MuE/QDX2REU1+0tKM/1GRy/+PEEx/CczNfszTVb8MkxW/y1CSf8vNjH/KTU3/y08Pv4uOjr+MD4+/kNT
        UP9SZlv/UWxp/0pobP9EY2v/NlBe/i1DUv4tO0L+LjM2+ywuLfktLi31Ji8y1BVCQnwbHBkbGBYUAQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAA
        AAMAAwMNAhwcMBdAQHAjPEGkID5GvR09QtM1OCzeJjgy0BRBPsI+WFLORXCF5UFvhvI6Pzb0Iyst7z5a
        YOMyVm3aOlRW3i41LOo8PS/2PT4r+zo5J/ZIRinrR0Ys4Dk+Nd4uQkffM2hvzjdia7YnWXKbGk9SYA8X
        Fh0QCAcCAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAEBAgAMDAsEIiIcACAgLg45OUcWP0RVDjY1RgEQEDcLMTFFHE5MaCpq
        goYqWl2NJUdHfApGRmAKNzZPD0E8VSZSQnMvS0KbMzo9sC5HRZwdTEF0FkA3WhU/OFtbXkVmMC4iTgkd
        HCwOISAYCg0MCQgEBAEAAAAAAAAAAAAAAAAGAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAQACAgQABQUFAgMDBAEA
        AAIBAAAEAQMDCQEQEBABDw8RAgoKDAIFBQYBAQEEAQEBBQIFBQoCHR0XBzU2HwQoKBYDBgYKBAICBQUC
        AgY1FwkIHw0FBQcDAwIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD////////8/f////////z9////////
        /P3////////8/f////////z9/////////P3////////8/f////////z9/////////P3////////8/f//
        ////9/z9/////////P3/wAA///78/f8AAAf//vz9+AAAAB/+/P3wAAAAB/78/YAAAAAB/vz9AAAAAAAe
        /P0AAAAAAA78/QAAAAAABvz9AAAAAAAC/P0AAAAAAAD8/QAAAAAAAPz9AAAAAAAA/P0AAAAAAAH8/YAA
        AAAAAfz94AAAAAAB/P34AAAAAAH8/fwAAAAAAfz9/wAAAAAB/P3/+AAAAAP8/X//AAAAB/z9f//AAAA/
        /P1////////8/f////////z9/////////P3////////8/f////////z9/////////P3////////8/f//
        //////z9/////////P3////////8/f////////z9/////////P3////////8/f////////z9////////
        /P0=
</value>
  </data>
</root>